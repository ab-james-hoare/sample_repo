pr:
  branches:
    include:
      - main

trigger: none

pool:
  name: 'Default'

# lockBehavior: sequential
stages:
  - stage: TerraformValidate
    jobs:
      - job: TerraformValidate
        steps:
          - task: TerraformInstaller@1.0.5
            displayName: Install Terraform
            inputs:
              terraformVersion: '1.6.0'
          - task: CmdLine@2
            displayName: Install tflint
            inputs:
              script: |
                echo "Installing tflint tool..."
                curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
          - task: CmdLine@2
            displayName: Install tfsec
            inputs:
              script: |
                echo "Installing tfsec tool..."
                curl -s https://raw.githubusercontent.com/aquasecurity/tfsec/master/scripts/install_linux.sh | bash
          - task: CmdLine@2
            displayName: Install commitlint
            inputs:
              script: |
                echo "Installing commitlint tool..."
                apt-get update && apt-get install -y ca-certificates curl gnupg
                curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg
                NODE_MAJOR=20
                echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_$NODE_MAJOR.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list
                apt-get update && apt-get install nodejs -y
                npm install -g @commitlint/cli @commitlint/config-conventional
                echo "module.exports = {extends: ['@commitlint/config-conventional']}" > commitlint.config.js
                commitlint --from=HEAD~1
          - task: CmdLine@2
            displayName: Terraform fmt check
            inputs:
              script: |
                echo "Checking if terraform code has been formatted..."
                terraform fmt -recursive -check terraform
          - task: CmdLine@2
            displayName: Terraform lint check
            inputs:
              script: |
                echo "Running tflint..."
                tflint --chdir terraform --init
                tflint --chdir terraform/ --force
          - task: CmdLine@2
            displayName: Terraform security check
            inputs:
              script: |
                echo "Running tfsec..."
                tfsec terraform/
          # - task: CmdLine@2
          #   displayName: Terraform init
          #   inputs:
          #     script: |
          #       export GOOGLE_APPLICATION_CREDENTIALS=$(System.DefaultWorkingDirectory)/secret.json
          #       terraform -chdir=terraform init
          # - task: CmdLine@2
          #   displayName: Terraform validate
          #   inputs:
          #     script: |
          #       export GOOGLE_APPLICATION_CREDENTIALS=$(System.DefaultWorkingDirectory)/secret.json
          #       terraform -chdir=terraform validate